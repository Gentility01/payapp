# Generated by Django 5.0.3 on 2024-03-16 05:38

import auto_prefetch
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import django_resized.forms
import uuid
import webapps2024.utils.media
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Adminstrator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    auto_prefetch.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="administrator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Admins",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="BankAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        choices=[
                            ("BANK_OF_AMERICA", "Bank of America"),
                            ("CHINA_UNION_PAY", "China Union Pay"),
                            ("CREDIT_AGRICOLE", "Credit Agricole"),
                            ("CREDIT_SUISSE", "Credit Suisse"),
                            ("DEUTSCHE_BANK", "Deutsche Bank"),
                            ("JPMORGAN_CHASE", "JPMorgan Chase"),
                            ("MASTERCARD", "Mastercard"),
                            ("ACCESS_BANK", "Access Bank"),
                            ("FIRST_BANK", "First Bank of Nigeria"),
                            ("GTBANK", "Guaranty Trust Bank"),
                            ("ZENITH_BANK", "Zenith Bank"),
                            ("UBA", "United Bank for Africa"),
                            ("STANBIC_IBTC", "Stanbic IBTC Bank"),
                        ],
                        default="ACCESS_BANK",
                        max_length=50,
                    ),
                ),
                ("account_number", models.CharField(max_length=50)),
                ("routing_number", models.CharField(max_length=50)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Bank Accounts",
            },
        ),
        migrations.CreateModel(
            name="OnlineAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("USD", "ðŸ‡ºðŸ‡¸ US Dollars"),
                            ("EUR", "ðŸ‡ªðŸ‡º Euros"),
                            ("JPY", "ðŸ‡¯ðŸ‡µ Yen"),
                            ("CNY", "ðŸ‡¨ðŸ‡³ Chinese Yuan"),
                            ("INR", "ðŸ‡®ðŸ‡³ Rupee"),
                            ("GBP", "ðŸ‡¬ðŸ‡§ Pounds"),
                            ("CAD", "ðŸ‡¨ðŸ‡¦ Canadian Dollars"),
                            ("BTC", "ðŸ”’ Bitcoin"),
                            ("ETH", "ðŸ§¬ Ethereum"),
                            ("NGN", "ðŸ‡³ðŸ‡¬ Nigerian Naira"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, default=10000.0, max_digits=10
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "OnlineAccount",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "payapp_account",
                    models.CharField(
                        default=uuid.uuid4, editable=False, max_length=100
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "profile_picture",
                    django_resized.forms.ResizedImageField(
                        blank=True,
                        crop=["middle", "center"],
                        default="images/default.png",
                        force_format="PNG",
                        keep_meta=True,
                        null=True,
                        quality=100,
                        scale=None,
                        size=[50, 50],
                        upload_to=webapps2024.utils.media.MediaHelper.get_image_upload_path,
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "online_account",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="register.onlineaccount",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User's Profile",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
